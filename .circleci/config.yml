version: 2.1

orbs:
    unity: game-ci/unity@1.3.0
    aws-cli: circleci/aws-cli@3.1.3

parameters:
    editor-version:
        description: "The unity version to use"
        type: string
        default: "2021.3.13f1"
    build-name:
        description: "The name of the build. If empty, the build will be named after the target platform. "
        type: string
        default: ""
    target-platform:
        description: "Which platform to build to"
        enum:
            - android
            - base
            - ios
            - linux-il2cpp
            - mac-mono
            - webgl
            - windows-mono
        type: enum
        default: android
    build-target:
        description: "Which platform to build to"
        type: string
        default: "Android"
    executor-name:
        description: "Which executor to use"
        type: string
        default: "unity/ubuntu"
    project-path:
        description: "Relative path for the project"
        type: string
        default: "."

jobs:
    upload-to-aws-bucket:
        executor: aws-cli/default
        parameters:
            project-path:
                type: string
            build-target:
                type: string
            build-name:
                type: string
        steps:
            - checkout
            - run: pwd
            - run: ls -a
            - run: ls -l -d .
            - run: ls -l /README.md
            - run: ls -l << parameters.project-path >>/README.md
            - aws-cli/setup
            - aws-cli/role-arn-setup:
                profile-name: circleci
                role-arn: "arn:aws:iam::992660079108:role/circleci_role"
                source-profile: default
            - run: aws s3 ls --profile circleci
            - run: aws s3 ls $BUCKET --profile circleci
            - run: aws s3 sync << parameters.project-path >>/README.md $BUCKET/<< parameters.build-name >>/<< parameters.build-target >> --profile circleci
            - run: aws s3 ls $BUCKET --profile circleci

workflows:
    # # Uncomment this job if you need to activate a PERSONAL license for Unity. We probably can create some kind of script to check if
    # # Unity is already activated and just execute this job if it isn't.
    # # For more information about activation, check: https://game.ci/docs/circleci/activation
    # create-unity-activation-file:
    #     jobs:
    #         - unity/create-activation-file:
    #             editor_version: << pipeline.parameters.editor-version >>
    build:
        jobs:
            # # Run Tests
            # - unity/test:
            #     name: "editmode-tests"
            #     executor:
            #         name: << pipeline.parameters.executor-name >>
            #         target_platform: << pipeline.parameters.target-platform >>
            #         editor_version: << pipeline.parameters.editor-version >>
            #     project-path: << pipeline.parameters.project-path >>
            #     test-platform: "editmode"
            #     context: unity-personal

            # - unity/test:
            #     name: "playmode-tests"
            #     executor:
            #         name: << pipeline.parameters.executor-name >>
            #         target_platform: << pipeline.parameters.target-platform >>
            #         editor_version: << pipeline.parameters.editor-version >>
            #     project-path: << pipeline.parameters.project-path >>
            #     test-platform: "playmode"
            #     context: unity-personal

            # # Build Player
            # - unity/build:
            #     # requires:
            #     #   - editmode-tests
            #     #   - playmode-tests
            #     filters:
            #       branches:
            #         only:
            #             - main
            #     executor:
            #         name: << pipeline.parameters.executor-name >>
            #         target_platform: << pipeline.parameters.target-platform >>
            #         editor_version: << pipeline.parameters.editor-version >>
            #     build-name: << pipeline.parameters.build-name >>
            #     project-path: << pipeline.parameters.project-path >>
            #     build-target: << pipeline.parameters.build-target >>
            #     compress: true
            #     custom-parameters: "-BuildOptions Development"
            #     store-artifacts: false
            #     context: unity-personal

            # Copy build to S3 bucket
            - upload-to-aws-bucket:
                # requires:
                #   - unity/build
                project-path: << pipeline.parameters.project-path >>
                build-target: << pipeline.parameters.build-target >>
                build-name: << pipeline.parameters.build-name >>
                context: aws

    
